// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: collections_internal_service.proto

package qdrant

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCollectionInfoRequestInternal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetCollectionInfoRequest *GetCollectionInfoRequest `protobuf:"bytes,1,opt,name=get_collectionInfoRequest,json=getCollectionInfoRequest,proto3" json:"get_collectionInfoRequest,omitempty"`
	ShardId                  uint32                    `protobuf:"varint,2,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
}

func (x *GetCollectionInfoRequestInternal) Reset() {
	*x = GetCollectionInfoRequestInternal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collections_internal_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCollectionInfoRequestInternal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectionInfoRequestInternal) ProtoMessage() {}

func (x *GetCollectionInfoRequestInternal) ProtoReflect() protoreflect.Message {
	mi := &file_collections_internal_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectionInfoRequestInternal.ProtoReflect.Descriptor instead.
func (*GetCollectionInfoRequestInternal) Descriptor() ([]byte, []int) {
	return file_collections_internal_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetCollectionInfoRequestInternal) GetGetCollectionInfoRequest() *GetCollectionInfoRequest {
	if x != nil {
		return x.GetCollectionInfoRequest
	}
	return nil
}

func (x *GetCollectionInfoRequestInternal) GetShardId() uint32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

type InitiateShardTransferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionName string `protobuf:"bytes,1,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"` // Name of the collection
	ShardId        uint32 `protobuf:"varint,2,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`                     // Id of the temporary shard
}

func (x *InitiateShardTransferRequest) Reset() {
	*x = InitiateShardTransferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collections_internal_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitiateShardTransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitiateShardTransferRequest) ProtoMessage() {}

func (x *InitiateShardTransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_collections_internal_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitiateShardTransferRequest.ProtoReflect.Descriptor instead.
func (*InitiateShardTransferRequest) Descriptor() ([]byte, []int) {
	return file_collections_internal_service_proto_rawDescGZIP(), []int{1}
}

func (x *InitiateShardTransferRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *InitiateShardTransferRequest) GetShardId() uint32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

type WaitForShardStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionName string       `protobuf:"bytes,1,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"` // Name of the collection
	ShardId        uint32       `protobuf:"varint,2,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`                     // Id of the shard
	State          ReplicaState `protobuf:"varint,3,opt,name=state,proto3,enum=qdrant.ReplicaState" json:"state,omitempty"`               // Shard state to wait for
	Timeout        uint64       `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`                                    // Timeout in seconds
}

func (x *WaitForShardStateRequest) Reset() {
	*x = WaitForShardStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collections_internal_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitForShardStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForShardStateRequest) ProtoMessage() {}

func (x *WaitForShardStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_collections_internal_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForShardStateRequest.ProtoReflect.Descriptor instead.
func (*WaitForShardStateRequest) Descriptor() ([]byte, []int) {
	return file_collections_internal_service_proto_rawDescGZIP(), []int{2}
}

func (x *WaitForShardStateRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *WaitForShardStateRequest) GetShardId() uint32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *WaitForShardStateRequest) GetState() ReplicaState {
	if x != nil {
		return x.State
	}
	return ReplicaState_Active
}

func (x *WaitForShardStateRequest) GetTimeout() uint64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type GetShardRecoveryPointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionName string `protobuf:"bytes,1,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"` // Name of the collection
	ShardId        uint32 `protobuf:"varint,2,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`                     // Id of the shard
}

func (x *GetShardRecoveryPointRequest) Reset() {
	*x = GetShardRecoveryPointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collections_internal_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShardRecoveryPointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShardRecoveryPointRequest) ProtoMessage() {}

func (x *GetShardRecoveryPointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_collections_internal_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShardRecoveryPointRequest.ProtoReflect.Descriptor instead.
func (*GetShardRecoveryPointRequest) Descriptor() ([]byte, []int) {
	return file_collections_internal_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetShardRecoveryPointRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *GetShardRecoveryPointRequest) GetShardId() uint32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

type GetShardRecoveryPointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecoveryPoint *RecoveryPoint `protobuf:"bytes,1,opt,name=recovery_point,json=recoveryPoint,proto3" json:"recovery_point,omitempty"` // Recovery point of the shard
	Time          float64        `protobuf:"fixed64,2,opt,name=time,proto3" json:"time,omitempty"`                                      // Time spent to process
}

func (x *GetShardRecoveryPointResponse) Reset() {
	*x = GetShardRecoveryPointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collections_internal_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShardRecoveryPointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShardRecoveryPointResponse) ProtoMessage() {}

func (x *GetShardRecoveryPointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_collections_internal_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShardRecoveryPointResponse.ProtoReflect.Descriptor instead.
func (*GetShardRecoveryPointResponse) Descriptor() ([]byte, []int) {
	return file_collections_internal_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetShardRecoveryPointResponse) GetRecoveryPoint() *RecoveryPoint {
	if x != nil {
		return x.RecoveryPoint
	}
	return nil
}

func (x *GetShardRecoveryPointResponse) GetTime() float64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type RecoveryPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clocks []*RecoveryPointClockTag `protobuf:"bytes,1,rep,name=clocks,proto3" json:"clocks,omitempty"`
}

func (x *RecoveryPoint) Reset() {
	*x = RecoveryPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collections_internal_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoveryPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoveryPoint) ProtoMessage() {}

func (x *RecoveryPoint) ProtoReflect() protoreflect.Message {
	mi := &file_collections_internal_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoveryPoint.ProtoReflect.Descriptor instead.
func (*RecoveryPoint) Descriptor() ([]byte, []int) {
	return file_collections_internal_service_proto_rawDescGZIP(), []int{5}
}

func (x *RecoveryPoint) GetClocks() []*RecoveryPointClockTag {
	if x != nil {
		return x.Clocks
	}
	return nil
}

type RecoveryPointClockTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerId    uint64 `protobuf:"varint,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	ClockId   uint32 `protobuf:"varint,2,opt,name=clock_id,json=clockId,proto3" json:"clock_id,omitempty"`
	ClockTick uint64 `protobuf:"varint,3,opt,name=clock_tick,json=clockTick,proto3" json:"clock_tick,omitempty"`
	Token     uint64 `protobuf:"varint,4,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *RecoveryPointClockTag) Reset() {
	*x = RecoveryPointClockTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collections_internal_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoveryPointClockTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoveryPointClockTag) ProtoMessage() {}

func (x *RecoveryPointClockTag) ProtoReflect() protoreflect.Message {
	mi := &file_collections_internal_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoveryPointClockTag.ProtoReflect.Descriptor instead.
func (*RecoveryPointClockTag) Descriptor() ([]byte, []int) {
	return file_collections_internal_service_proto_rawDescGZIP(), []int{6}
}

func (x *RecoveryPointClockTag) GetPeerId() uint64 {
	if x != nil {
		return x.PeerId
	}
	return 0
}

func (x *RecoveryPointClockTag) GetClockId() uint32 {
	if x != nil {
		return x.ClockId
	}
	return 0
}

func (x *RecoveryPointClockTag) GetClockTick() uint64 {
	if x != nil {
		return x.ClockTick
	}
	return 0
}

func (x *RecoveryPointClockTag) GetToken() uint64 {
	if x != nil {
		return x.Token
	}
	return 0
}

type UpdateShardCutoffPointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionName string         `protobuf:"bytes,1,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"` // Name of the collection
	ShardId        uint32         `protobuf:"varint,2,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`                     // Id of the shard
	Cutoff         *RecoveryPoint `protobuf:"bytes,3,opt,name=cutoff,proto3" json:"cutoff,omitempty"`                                       // Cutoff point of the shard
}

func (x *UpdateShardCutoffPointRequest) Reset() {
	*x = UpdateShardCutoffPointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collections_internal_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateShardCutoffPointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateShardCutoffPointRequest) ProtoMessage() {}

func (x *UpdateShardCutoffPointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_collections_internal_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateShardCutoffPointRequest.ProtoReflect.Descriptor instead.
func (*UpdateShardCutoffPointRequest) Descriptor() ([]byte, []int) {
	return file_collections_internal_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateShardCutoffPointRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *UpdateShardCutoffPointRequest) GetShardId() uint32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *UpdateShardCutoffPointRequest) GetCutoff() *RecoveryPoint {
	if x != nil {
		return x.Cutoff
	}
	return nil
}

var File_collections_internal_service_proto protoreflect.FileDescriptor

var file_collections_internal_service_proto_rawDesc = []byte{
	0x0a, 0x22, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x71, 0x64, 0x72, 0x61, 0x6e, 0x74, 0x1a, 0x11, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x9c, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x12, 0x5d, 0x0a, 0x19, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x71, 0x64, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x18, 0x67, 0x65, 0x74, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x62,
	0x0a, 0x1c, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27,
	0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x22, 0xa4, 0x01, 0x0a, 0x18, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x71, 0x64, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x62, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x71, 0x0a,
	0x1d, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c,
	0x0a, 0x0e, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x71, 0x64, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0d, 0x72,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x22, 0x46, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x35, 0x0a, 0x06, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x71, 0x64, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x67,
	0x52, 0x06, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x54,
	0x61, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x74, 0x69, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x63,
	0x6b, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x92, 0x01, 0x0a, 0x1d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x43, 0x75, 0x74, 0x6f, 0x66,
	0x66, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a,
	0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49,
	0x64, 0x12, 0x2d, 0x0a, 0x06, 0x63, 0x75, 0x74, 0x6f, 0x66, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x71, 0x64, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x63, 0x75, 0x74, 0x6f, 0x66, 0x66,
	0x32, 0xf2, 0x03, 0x0a, 0x13, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x54, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12,
	0x28, 0x2e, 0x71, 0x64, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x1a, 0x21, 0x2e, 0x71, 0x64, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57,
	0x0a, 0x08, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x71, 0x64, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x71, 0x64, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x11, 0x57, 0x61, 0x69, 0x74, 0x46,
	0x6f, 0x72, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x2e, 0x71,
	0x64, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x71, 0x64, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x24,
	0x2e, 0x71, 0x64, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x71, 0x64, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a,
	0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x43, 0x75, 0x74, 0x6f,
	0x66, 0x66, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x25, 0x2e, 0x71, 0x64, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x43, 0x75, 0x74, 0x6f,
	0x66, 0x66, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x71, 0x64, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x76, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x2e, 0x71, 0x64, 0x72,
	0x61, 0x6e, 0x74, 0x42, 0x1f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2f, 0x71, 0x64, 0x72, 0x61, 0x6e, 0x74, 0xa2, 0x02, 0x03, 0x51, 0x58, 0x58, 0xaa, 0x02, 0x06,
	0x51, 0x64, 0x72, 0x61, 0x6e, 0x74, 0xca, 0x02, 0x06, 0x51, 0x64, 0x72, 0x61, 0x6e, 0x74, 0xe2,
	0x02, 0x12, 0x51, 0x64, 0x72, 0x61, 0x6e, 0x74, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x06, 0x51, 0x64, 0x72, 0x61, 0x6e, 0x74, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_collections_internal_service_proto_rawDescOnce sync.Once
	file_collections_internal_service_proto_rawDescData = file_collections_internal_service_proto_rawDesc
)

func file_collections_internal_service_proto_rawDescGZIP() []byte {
	file_collections_internal_service_proto_rawDescOnce.Do(func() {
		file_collections_internal_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_collections_internal_service_proto_rawDescData)
	})
	return file_collections_internal_service_proto_rawDescData
}

var file_collections_internal_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_collections_internal_service_proto_goTypes = []any{
	(*GetCollectionInfoRequestInternal)(nil), // 0: qdrant.GetCollectionInfoRequestInternal
	(*InitiateShardTransferRequest)(nil),     // 1: qdrant.InitiateShardTransferRequest
	(*WaitForShardStateRequest)(nil),         // 2: qdrant.WaitForShardStateRequest
	(*GetShardRecoveryPointRequest)(nil),     // 3: qdrant.GetShardRecoveryPointRequest
	(*GetShardRecoveryPointResponse)(nil),    // 4: qdrant.GetShardRecoveryPointResponse
	(*RecoveryPoint)(nil),                    // 5: qdrant.RecoveryPoint
	(*RecoveryPointClockTag)(nil),            // 6: qdrant.RecoveryPointClockTag
	(*UpdateShardCutoffPointRequest)(nil),    // 7: qdrant.UpdateShardCutoffPointRequest
	(*GetCollectionInfoRequest)(nil),         // 8: qdrant.GetCollectionInfoRequest
	(ReplicaState)(0),                        // 9: qdrant.ReplicaState
	(*GetCollectionInfoResponse)(nil),        // 10: qdrant.GetCollectionInfoResponse
	(*CollectionOperationResponse)(nil),      // 11: qdrant.CollectionOperationResponse
}
var file_collections_internal_service_proto_depIdxs = []int32{
	8,  // 0: qdrant.GetCollectionInfoRequestInternal.get_collectionInfoRequest:type_name -> qdrant.GetCollectionInfoRequest
	9,  // 1: qdrant.WaitForShardStateRequest.state:type_name -> qdrant.ReplicaState
	5,  // 2: qdrant.GetShardRecoveryPointResponse.recovery_point:type_name -> qdrant.RecoveryPoint
	6,  // 3: qdrant.RecoveryPoint.clocks:type_name -> qdrant.RecoveryPointClockTag
	5,  // 4: qdrant.UpdateShardCutoffPointRequest.cutoff:type_name -> qdrant.RecoveryPoint
	0,  // 5: qdrant.CollectionsInternal.Get:input_type -> qdrant.GetCollectionInfoRequestInternal
	1,  // 6: qdrant.CollectionsInternal.Initiate:input_type -> qdrant.InitiateShardTransferRequest
	2,  // 7: qdrant.CollectionsInternal.WaitForShardState:input_type -> qdrant.WaitForShardStateRequest
	3,  // 8: qdrant.CollectionsInternal.GetShardRecoveryPoint:input_type -> qdrant.GetShardRecoveryPointRequest
	7,  // 9: qdrant.CollectionsInternal.UpdateShardCutoffPoint:input_type -> qdrant.UpdateShardCutoffPointRequest
	10, // 10: qdrant.CollectionsInternal.Get:output_type -> qdrant.GetCollectionInfoResponse
	11, // 11: qdrant.CollectionsInternal.Initiate:output_type -> qdrant.CollectionOperationResponse
	11, // 12: qdrant.CollectionsInternal.WaitForShardState:output_type -> qdrant.CollectionOperationResponse
	4,  // 13: qdrant.CollectionsInternal.GetShardRecoveryPoint:output_type -> qdrant.GetShardRecoveryPointResponse
	11, // 14: qdrant.CollectionsInternal.UpdateShardCutoffPoint:output_type -> qdrant.CollectionOperationResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_collections_internal_service_proto_init() }
func file_collections_internal_service_proto_init() {
	if File_collections_internal_service_proto != nil {
		return
	}
	file_collections_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_collections_internal_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetCollectionInfoRequestInternal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collections_internal_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*InitiateShardTransferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collections_internal_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*WaitForShardStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collections_internal_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetShardRecoveryPointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collections_internal_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetShardRecoveryPointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collections_internal_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*RecoveryPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collections_internal_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*RecoveryPointClockTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collections_internal_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateShardCutoffPointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_collections_internal_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_collections_internal_service_proto_goTypes,
		DependencyIndexes: file_collections_internal_service_proto_depIdxs,
		MessageInfos:      file_collections_internal_service_proto_msgTypes,
	}.Build()
	File_collections_internal_service_proto = out.File
	file_collections_internal_service_proto_rawDesc = nil
	file_collections_internal_service_proto_goTypes = nil
	file_collections_internal_service_proto_depIdxs = nil
}
